# this event creates a skirmish whenever a
# company attacks another.
[event]
	id=Company_attack_event
	name=attacker hits
	first_time_only=no
	[filter_attack]
		special=engagement
	[/filter_attack]

	# use of $unit, $x1 etc is safe, because this macro is only called by
	# the company attack event
	{VARIABLE GN_ATTACKING_COMPANY $unit.variables.company}
	{VARIABLE GN_DEFENDING_COMPANY $second_unit.variables.company}

	{VARIABLE GN_COMPANY[$GN_ATTACKING_COMPANY|].bloodlust $unit.hitpoints|}
	{VARIABLE GN_COMPANY[$GN_DEFENDING_COMPANY|].bloodlust "$($second_unit.hitpoints|/2)"}

	{DEFENDER_RETREAT_OPTION}
	{ATTACKER_RETREAT_OPTION}
	{SET_LOCAL_MODE}
[/event]

[event]
	id=defender_retreat
	name=defender_retreat
	first_time_only=no

	{CLEAR_VARIABLE GN_RETREAT_DECISION}

	[lua]
		code=<<show_retreat_dialog()>>
	[/lua]

	[if]
		[variable]
			name=GN_RETREAT_DECISION
			equals=yes
		[/variable]
		[then]
			{VARIABLE GN_COMPANY[$GN_ATTACKING_COMPANY|].company.x $GN_COMPANY[$GN_DEFENDING_COMPANY|].company.x|}
			{VARIABLE GN_COMPANY[$GN_ATTACKING_COMPANY|].company.y $GN_COMPANY[$GN_DEFENDING_COMPANY|].company.y|}

			{VARIABLE GN_COMPANY[$GN_DEFENDING_COMPANY|].company.x $retreat_x|}
			{VARIABLE GN_COMPANY[$GN_DEFENDING_COMPANY|].company.y $retreat_y|}

			{COMPANY_COLLECT_LOOT $GN_ATTACKING_COMPANY|}

			{RETREAT_COMPANY $GN_DEFENDING_COMPANY| $GN_ATTACKING_COMPANY|}
			{END_SKIRMISH}
		[/then]
	[/if]
[/event]

[event]
	id=level_up_on_advancement
	# for version >= 1.13.0, change to "pre advance"
	name=post advance
	first_time_only=no
	[filter]
		race=Company
	[/filter]
	[modify_unit]
		[filter]
			id=$unit.id
		[/filter]
		level="$($unit.level|+1)"
	[/modify_unit]
[/event]

